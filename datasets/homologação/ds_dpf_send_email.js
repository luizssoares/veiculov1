 function defineStructure() { } function onSync(lastSyncDate) { } function createDataset(fields, constraints, sortFields) { log.info("Digte Public Form - @@@ Inicio Dataset ds_dpf_send_email.js"); var dataset = DatasetBuilder.newDataset(); var cCodigoFormularioPublico = null; var cCodJornada = null; var cCodStatus = null; var cCodStatusMensagem = null; var cIdProcesso = null; var cWKNumProces = null; var cWKNextState = null; var cEmail = null; var cInsertUrl = ""; var cInsertUrlToken = ""; var cViewUrl = ""; var cNomeEtapa = ""; var cAcao = ""; var campo = []; var cRemetente = ""; var cTemplateEmail = "DigteDdfTemplateEmail"; var cAssuntoEmail = ""; var cConteudoEmail = ""; var cConteudoSms = ""; var cLink = ""; var dpfDatasetEncodedData = false; for (var i = 0; i < constraints.length; i++) { if (constraints[i].fieldName == "dpfDatasetEncodedData") { dpfDatasetEncodedData = constraints[i].initialValue == "true" || constraints[i].initialValue == true ? true : false; } } if (constraints != null) { for (var i = 0; i < constraints.length; i++) { if (constraints[i].fieldName == "codigoFormularioPublico") { cCodigoFormularioPublico = constraints[i].initialValue; } else if (constraints[i].fieldName == "codJornada") { cCodJornada = constraints[i].initialValue; } else if (constraints[i].fieldName == "codStatus") { cCodStatus = constraints[i].initialValue; } else if (constraints[i].fieldName == "codStatusMensagem") { cCodStatusMensagem = constraints[i].initialValue; } else if (constraints[i].fieldName == "WKNumProces") { cWKNumProces = constraints[i].initialValue; } else if (constraints[i].fieldName == "WKNextState") { cWKNextState = constraints[i].initialValue; } else if (constraints[i].fieldName == "email") { cEmail = constraints[i].initialValue; } else if (constraints[i].fieldName == "acao") { cAcao = constraints[i].initialValue; } else if (constraints[i].fieldName == "campo") { if (dpfDatasetEncodedData == true){ var asBytes = java.util.Base64.getDecoder().decode(constraints[i].initialValue); var valueString = new java.lang.String(asBytes, "utf-8"); constraints[i].initialValue = decodeURI(valueString); } campo.push(JSON.parse(constraints[i].initialValue)); } else if (constraints[i].fieldName == "remetente") { cRemetente = constraints[i].initialValue; } else if (constraints[i].fieldName == "templateEmail") { cTemplateEmail = constraints[i].initialValue; } else if (constraints[i].fieldName == "link") { cLink = constraints[i].initialValue; } } } if (cCodigoFormularioPublico != null || cCodJornada != null) { if (cCodJornada != ""){ var contrCodJornada = DatasetFactory.createConstraint("codJornada", cCodJornada, cCodJornada, ConstraintType.MUST); var dsJornada = DatasetFactory.getDataset("dpf_cadastro_jornada", null, [contrCodJornada], null); if (dsJornada != undefined && dsJornada != null && dsJornada.rowsCount > 0) { cCodigoFormularioPublico = cCodigoFormularioPublico == "" ? dsJornada.getValue(0, "codigoFormularioPublico") : cCodigoFormularioPublico; var documentId = dsJornada.getValue(0, "metadata#id"); var documentVersion = dsJornada.getValue(0, "metadata#version"); var c1 = DatasetFactory.createConstraint("tablename", "tbJornadaStatus", "tbJornadaStatus", ConstraintType.MUST); var c2 = DatasetFactory.createConstraint("metadata#id", documentId, documentId, ConstraintType.MUST); var c3 = DatasetFactory.createConstraint("metadata#version", documentVersion, documentVersion, ConstraintType.MUST); var c4 = DatasetFactory.createConstraint("metadata#active", "true", "true", ConstraintType.MUST); var constrStatus = [c1, c2, c3, c4]; var dsStatusJornada = DatasetFactory.getDataset("dpf_cadastro_jornada", null, constrStatus, ["jornadaOrdem"]); /* pegar a primeira etapa da jornada */ if ((cCodStatus == null || cCodStatus == "") && (cWKNextState == null || cWKNextState == "")){ for (var j = 0; j < dsStatusJornada.rowsCount; j++) { cCodStatus = dsStatusJornada.getValue(j,"atividadeOrdem"); cCodStatus = cCodStatus == null ? "" : cCodStatus; break; } } /* pegar a primeira etapa da jornada */ } } if (cCodigoFormularioPublico != null && cCodigoFormularioPublico != "") { var cCodForm = DatasetFactory.createConstraint("codigoFormularioPublico", cCodigoFormularioPublico, cCodigoFormularioPublico, ConstraintType.MUST); var dsConfig = DatasetFactory.getDataset("dpf_configuracoes", null, [cCodForm], null); if (dsConfig != undefined && dsConfig != null && dsConfig.rowsCount > 0) { var cUserSolicitante = dsConfig.getValue(0, "userStartProcessMatricula") + ""; var serverUrl = dsConfig.getValue(0, "serverUrl") + ""; var consCodigoFormularioPublico = DatasetFactory.createConstraint("codigoFormularioPublico", cCodigoFormularioPublico, cCodigoFormularioPublico, ConstraintType.MUST); if (cCodStatus == null || cCodStatus == ""){ var constr = [consCodigoFormularioPublico]; } else{ var consCodStatus = DatasetFactory.createConstraint("atividadeOrdem", cCodStatus, cCodStatus, ConstraintType.MUST); var constr = [consCodigoFormularioPublico,consCodStatus]; } var dsStatus = DatasetFactory.getDataset("dpf_cadastro_status", null, constr, null); if (dsStatus != null && dsStatus != undefined && dsStatus.rowsCount > 0) { var lOk = false; top: for (var j = 0; j < dsStatus.rowsCount; j++) { lOk = false; if (cCodStatus == null || cCodStatus == ""){ var documentId = dsStatus.getValue(j, "metadata#id"); var documentVersion = dsStatus.getValue(j, "metadata#version"); var c1 = DatasetFactory.createConstraint("tablename", "tbAtividade" ,"tbAtividade", ConstraintType.MUST); var c2 = DatasetFactory.createConstraint("metadata#id", documentId, documentId, ConstraintType.MUST); var c3 = DatasetFactory.createConstraint("metadata#version", documentVersion, documentVersion, ConstraintType.MUST); var c4 = DatasetFactory.createConstraint("atividadeId", cWKNextState, cWKNextState, ConstraintType.MUST); var constraintsFilhos = new Array(c1, c2, c3, c4); var datasetFilhos = DatasetFactory.getDataset("dpf_cadastro_status", null, constraintsFilhos, null); if (datasetFilhos != null && datasetFilhos != undefined && datasetFilhos.rowsCount > 0){ for (var idf = 0; idf < datasetFilhos.rowsCount; idf++) { lOk = true; break; } } } else { lOk = true; } if (lOk == true){ var cInsertUrlform = dsStatus.getValue(j, "linkAcao") + ""; cViewUrl = dsConfig.getValue(0, "telaConsultaURL") + ""; var cStatus = dsStatus.getValue(j,"atividadeOrdem") + ""; cNomeEtapa = dsStatus.getValue(j,"descricao") + ""; var str = new java.lang.String(cStatus); /* Encode */ cStatus = java.util.Base64.getEncoder().encodeToString(str.getBytes("utf-8")); var cString = DatasetFactory.createConstraint("stringValue", cWKNumProces, cWKNumProces, ConstraintType.MUST); var dsDecode = DatasetFactory.getDataset("ds_dpf_converter_string_to_base64", null, [cString], null); if (dsDecode != undefined && dsDecode != null && dsDecode.rowsCount > 0) { cWKNumProces = dsDecode.getValue(0, "encoded"); } var param = "f_p=" + cCodigoFormularioPublico + "&e_p=" + cStatus + "&n_p=" + cWKNumProces + (cCodJornada != "" && cCodJornada != null ? "&j_p=" + cCodJornada : ""); var str = new java.lang.String(param); var paramBase64 = java.util.Base64.getEncoder().encodeToString(str.getBytes("utf-8")); if (cInsertUrlform.indexOf("?") > -1){ cInsertUrlToken = cInsertUrlform + "&tokenDpf=" + paramBase64; cInsertUrl = cInsertUrlform + "&" + param; } else{ cInsertUrlToken = cInsertUrlform + "?tokenDpf=" + paramBase64; cInsertUrl = cInsertUrlform + "?" + param; } cInsertUrlToken = cInsertUrlToken.indexOf("http") == -1 ? serverUrl + cInsertUrlToken : cInsertUrlToken; if (cViewUrl.indexOf("?") > -1){ cViewUrl = cViewUrl + "&f_p=" + cCodigoFormularioPublico + "&e_p=" + cStatus + "&n_p=" + cWKNumProces + (cCodJornada != "" && cCodJornada != null ? "&j_p=" + cCodJornada : ""); } else{ cViewUrl = cViewUrl + "?f_p=" + cCodigoFormularioPublico + "&e_p=" + cStatus + "&n_p=" + cWKNumProces + (cCodJornada != "" && cCodJornada != null ? "&j_p=" + cCodJornada : ""); } if (cCodStatusMensagem != "" && cCodStatusMensagem != null) /* colocar um texto diferente para atividade - exemplo atraso de destino */ { var consCodStatusMensagem = DatasetFactory.createConstraint("atividadeOrdem", cCodStatusMensagem, cCodStatusMensagem, ConstraintType.MUST); var constr = [consCodigoFormularioPublico,consCodStatusMensagem]; var dsStatusMensagem = DatasetFactory.getDataset("dpf_cadastro_status", null, constr, null); for (var sm = 0; sm < dsStatusMensagem.rowsCount; sm++) { cAssuntoEmail = dsStatusMensagem.getValue(sm, "assuntoEmail"); cConteudoEmail = dsStatusMensagem.getValue(sm, "conteudoEmail"); cConteudoSms = dsStatusMensagem.getValue(sm, "conteudoSms"); break; } } else { /* texto padrao da atividade */ cAssuntoEmail = dsStatus.getValue(j, "assuntoEmail"); cConteudoEmail = dsStatus.getValue(j, "conteudoEmail"); cConteudoSms = dsStatus.getValue(j, "conteudoSms"); } cInsertUrl = cInsertUrl.indexOf("http") == -1 ? serverUrl + cInsertUrl : cInsertUrl; cViewUrl = cViewUrl.indexOf("http") == -1 ? serverUrl + cViewUrl : cViewUrl; cConteudoEmail = cConteudoEmail.replace("http://@@linkInsert",cInsertUrl); cConteudoEmail = cConteudoEmail.replace("https://@@linkInsert",cInsertUrl); cConteudoEmail = cConteudoEmail.replace("http://@@linkView",cViewUrl); cConteudoEmail = cConteudoEmail.replace("https://@@linkView",cViewUrl); cConteudoEmail = cConteudoEmail.replace("http://{{linkInsert}}",cInsertUrl); cConteudoEmail = cConteudoEmail.replace("https://{{linkInsert}}",cInsertUrl); cConteudoEmail = cConteudoEmail.replace("http://{{linkView}}",cViewUrl); cConteudoEmail = cConteudoEmail.replace("https://{{linkView}}",cViewUrl); cConteudoEmail = cConteudoEmail.replace("{{linkInsert}}",cInsertUrl); cConteudoEmail = cConteudoEmail.replace("{{linkView}}",cViewUrl); if (cLink != "" && cLink != null) cConteudoEmail = cConteudoEmail.replace("{{link}}",cLink); /* trocar campos do conteudo */ for (var cc = 0; cc < campo.length; cc++){ cAssuntoEmail = cAssuntoEmail.replace("{{"+ campo[cc].campo+"}}",campo[cc].valor); cConteudoEmail = cConteudoEmail.replace("{{"+ campo[cc].campo+"}}",campo[cc].valor); if (cConteudoSms != null){ cConteudoSms = cConteudoSms.replace("{{"+ campo[cc].campo+"}}",campo[cc].valor); } } break top; } } } else { log.info("Digte Public Form - @@@ ds_dpf_send_email.js - ERRO: não encontrado a Etapa | cCodigoFormularioPublico: " + cCodigoFormularioPublico + " cCodStatus: " + cCodStatus ); } if (cConteudoEmail != "" && cEmail != null && (cAcao == "" || cAcao == "email")){ var parametros = new java.util.HashMap(); var destinatarios = new java.util.ArrayList(); var destinatario = cEmail; if (getValue("WKUserLocale") == "en_US") { var subject = cAssuntoEmail; var markup = cConteudoEmail; } else if (getValue("WKUserLocale") == "es") { var subject = cAssuntoEmail; var markup = cConteudoEmail; } else { var subject = cAssuntoEmail; var markup = cConteudoEmail; } parametros.put("subject", subject); parametros.put("SUBJECT", subject); parametros.put("MARKUP", markup); destinatarios.add(destinatario); if (cRemetente != ""){ cUserSolicitante = cRemetente; } notifier.notify(cUserSolicitante, cTemplateEmail, parametros, destinatarios, "text/html"); log.info("Digte Public Form - @@@ ds_dpf_send_email.js - E-mail enviado com sucesso - Remetente: " + cUserSolicitante + " - Destinatário: " + destinatario); } else { log.info("Digte Public Form - @@@ ds_dpf_send_email.js - ERRO: E-mail não enviado por falta de conteúdo | conteudo: " + cConteudoEmail + " email: " + cEmail + " ação: " + cAcao); } } else { log.info("Digte Public Form - @@@ ds_dpf_send_email.js - ERRO: não encontrato o Process Público: cCodigoFormularioPublico: " + cCodigoFormularioPublico); } } else{ log.info("Digte Public Form - @@@ ds_dpf_send_email.js - ERRO: Processo Publico não informado "); } } else{ log.info("Digte Public Form - @@@ ds_dpf_send_email.js - ERRO: não informar Processo Publico e nem Jornada"); } dataset.addColumn("linkInsertToken"); dataset.addColumn("linkInsert"); dataset.addColumn("linkView"); dataset.addColumn("descricao"); dataset.addColumn("assuntoMensagem"); dataset.addColumn("conteudoMensagem"); dataset.addColumn("conteudoSms"); log.info("Digte Public Form - @@@ Fim Dataset ds_dpf_send_email.js"); dataset.addRow([cInsertUrlToken,cInsertUrl,cViewUrl,cNomeEtapa,cAssuntoEmail,cConteudoEmail,cConteudoSms]); return dataset; } function onMobileSync(user) { }